{
  "compiler": {
    "version": "0.6.12+commit.27d51765"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "feeRecipient",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "gatewayFeeRecipient",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "communityFund",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "refund",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "tipTxFee",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "gatewayFee",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "baseTxFee",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "creditGasFees"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "debitGasFees"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "balanceOf(address)": {
          "details": "The Celo VM calls balanceOf during its fee calculations on custom currencies to ensure that the holder has enough; since the VM debits and credits upscaled values, it needs to reference upscaled balances as well. See https://github.com/celo-org/celo-blockchain/blob/3808c45addf56cf547581599a1cb059bc4ae5089/core/state_transition.go#L321."
        },
        "creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)": {
          "details": "This function is called by the Celo protocol when paying for transaction fees in this currency. After the transaction is executed, unused gas is refunded to the sender and credited to the various fee recipients via a call to `creditGasFees`. The events emitted by `creditGasFees` reflect the *net* gas fee payments for the transaction. As an invariant, the original debited amount will always equal (refund + tipTxFee + gatewayFee + baseTxFee). Though the amount debited in debitGasFees is always equal to (refund + tipTxFee + gatewayFee + baseTxFee), in practice, the gateway fee is never used (0) and should ideally be ignored except in the function signature to optimize gas savings.",
          "params": {
            "baseTxFee": "Amount to distribute to `communityFund`.",
            "communityFund": "Celo Community Fund address.",
            "feeRecipient": "The main fee recipient address.",
            "from": "The original payer address from which balance was reserved via `debitGasFees`.",
            "gatewayFee": "Amount to distribute to `gatewayFeeRecipient`; this is deprecated and will always be 0.",
            "gatewayFeeRecipient": "Gateway address.",
            "refund": "Amount to be refunded by the VM to `from`.",
            "tipTxFee": "Amount to distribute to `feeRecipient`."
          }
        },
        "debitGasFees(address,uint256)": {
          "details": "This function is called by the Celo protocol when paying for transaction fees in this currency. After the transaction is executed, unused gas is refunded to the sender and credited to the various fee recipients via a call to `creditGasFees`. The events emitted by `creditGasFees` reflect the *net* gas fee payments for the transaction.",
          "params": {
            "from": "The address from which to reserve balance.",
            "value": "The amount of balance to reserve."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "balanceOf(address)": {
          "notice": "Return the balance of the address specified, but this balance is scaled appropriately to the number of decimals on this adapter."
        },
        "creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)": {
          "notice": "Credit *adapted* balances of original payer and various fee recipients after having made payments for gas in the form of this FiatToken currency."
        },
        "debitGasFees(address,uint256)": {
          "notice": "Reserve *adapted* balance for making payments for gas in this FiatToken currency."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@ensdomains/=node_modules/@ensdomains/",
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@solidity-parser/=node_modules/prettier-plugin-solidity/node_modules/@solidity-parser/",
      "ds-test/=lib/forge-std/lib/ds-test/src/",
      "eth-gas-reporter/=node_modules/eth-gas-reporter/",
      "forge-std/=lib/forge-std/src/",
      "hardhat/=node_modules/hardhat/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 10000000
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/interface/celo/IFiatTokenFeeAdapter.sol": "IFiatTokenFeeAdapter"
    },
    "evmVersion": "istanbul",
    "libraries": {}
  },
  "sources": {
    "contracts/interface/celo/IFiatTokenFeeAdapter.sol": {
      "keccak256": "0x04cbcdf9ccd7ba042f4b92f62c7d7cc56bf0d363f9e889f042b40db948487bbc",
      "urls": [
        "bzz-raw://1145fcc2a75e98e69a9f99dd8f6cf83f2f40ed1a70d63a79c5b7811039bfca1a",
        "dweb:/ipfs/QmPq4LyCPZX1qL4tCrSy3oSkED2Tboqxts6hrWPL1fzao9"
      ],
      "license": "Apache-2.0"
    }
  },
  "version": 1
}