{
  "compiler": {
    "version": "0.6.12+commit.27d51765"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Blacklisted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newBlacklister",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "BlacklisterChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "burner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Burn",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newMasterMinter",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MasterMinterChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "minter",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Mint",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "minter",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "minterAllowedAmount",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "MinterConfigured",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "oldMinter",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MinterRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [],
        "type": "event",
        "name": "Pause",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newAddress",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PauserChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newRescuer",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "RescuerChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Transfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "UnBlacklisted",
        "anonymous": false
      },
      {
        "inputs": [],
        "type": "event",
        "name": "Unpause",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "blacklist"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "blacklister",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "burn"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "minter",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "minterAllowedAmount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "configureMinter",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "currency",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "tokenName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "tokenSymbol",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "tokenCurrency",
            "type": "string"
          },
          {
            "internalType": "uint8",
            "name": "tokenDecimals",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "newMasterMinter",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "newPauser",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "newBlacklister",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "initialize"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isBlacklisted",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isMinter",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "masterMinter",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "mint",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "minter",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "minterAllowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "pause"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "paused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "pauser",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "minter",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "removeMinter",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "contract IERC20",
            "name": "tokenContract",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "rescueERC20"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "rescuer",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "unBlacklist"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "unpause"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_newBlacklister",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateBlacklister"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_newMasterMinter",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateMasterMinter"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_newPauser",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updatePauser"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newRescuer",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateRescuer"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "allowance(address,address)": {
          "params": {
            "owner": "The token owner's address.",
            "spender": "The spender's address."
          },
          "returns": {
            "_0": "The remaining allowance."
          }
        },
        "approve(address,uint256)": {
          "params": {
            "spender": "The spender's address.",
            "value": "The allowance amount."
          },
          "returns": {
            "_0": "True if the operation was successful."
          }
        },
        "balanceOf(address)": {
          "params": {
            "account": "The address to check."
          },
          "returns": {
            "_0": "balance The fiat token balance of the account."
          }
        },
        "blacklist(address)": {
          "params": {
            "_account": "The address to blacklist."
          }
        },
        "burn(uint256)": {
          "details": "The caller must be a minter, must not be blacklisted, and the amount to burn should be less than or equal to the account's balance.",
          "params": {
            "_amount": "the amount of tokens to be burned."
          }
        },
        "configureMinter(address,uint256)": {
          "params": {
            "minter": "The address of the minter.",
            "minterAllowedAmount": "The minting amount allowed for the minter."
          },
          "returns": {
            "_0": "True if the operation was successful."
          }
        },
        "initialize(string,string,string,uint8,address,address,address,address)": {
          "params": {
            "newBlacklister": "The blacklister address for the fiat token.",
            "newMasterMinter": "The masterMinter address for the fiat token.",
            "newOwner": "The owner of the fiat token.",
            "newPauser": "The pauser address for the fiat token.",
            "tokenCurrency": "The fiat currency that the token represents.",
            "tokenDecimals": "The number of decimals that the token uses.",
            "tokenName": "The name of the fiat token.",
            "tokenSymbol": "The symbol of the fiat token."
          }
        },
        "isBlacklisted(address)": {
          "params": {
            "_account": "The address to check."
          },
          "returns": {
            "_0": "True if the account is blacklisted, false if the account is not blacklisted."
          }
        },
        "isMinter(address)": {
          "params": {
            "account": "The address to check."
          },
          "returns": {
            "_0": "True if the account is a minter, false if the account is not a minter."
          }
        },
        "mint(address,uint256)": {
          "params": {
            "_amount": "The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
            "_to": "The address that will receive the minted tokens."
          },
          "returns": {
            "_0": "True if the operation was successful."
          }
        },
        "minterAllowance(address)": {
          "params": {
            "minter": "The address to check."
          },
          "returns": {
            "_0": "The remaining minter allowance for the account."
          }
        },
        "owner()": {
          "details": "Tells the address of the owner",
          "returns": {
            "_0": "the address of the owner"
          }
        },
        "pause()": {
          "details": "called by the owner to pause, triggers stopped state"
        },
        "removeMinter(address)": {
          "params": {
            "minter": "The address of the minter to remove."
          },
          "returns": {
            "_0": "True if the operation was successful."
          }
        },
        "rescueERC20(address,address,uint256)": {
          "params": {
            "amount": "Amount to withdraw",
            "to": "Recipient address",
            "tokenContract": "ERC20 token contract address"
          }
        },
        "rescuer()": {
          "returns": {
            "_0": "Rescuer's address"
          }
        },
        "totalSupply()": {
          "returns": {
            "_0": "The totalSupply of the fiat token."
          }
        },
        "transfer(address,uint256)": {
          "params": {
            "to": "Payee's address.",
            "value": "Transfer amount."
          },
          "returns": {
            "_0": "True if the operation was successful."
          }
        },
        "transferFrom(address,address,uint256)": {
          "details": "The caller must have some fiat token allowance on the payer's tokens.",
          "params": {
            "from": "Payer's address.",
            "to": "Payee's address.",
            "value": "Transfer amount."
          },
          "returns": {
            "_0": "True if the operation was successful."
          }
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        },
        "unBlacklist(address)": {
          "params": {
            "_account": "The address to remove from the blacklist."
          }
        },
        "unpause()": {
          "details": "called by the owner to unpause, returns to normal state"
        },
        "updateBlacklister(address)": {
          "params": {
            "_newBlacklister": "The address of the new blacklister."
          }
        },
        "updateMasterMinter(address)": {
          "params": {
            "_newMasterMinter": "The address of the new master minter."
          }
        },
        "updatePauser(address)": {
          "params": {
            "_newPauser": "The address of the new pauser."
          }
        },
        "updateRescuer(address)": {
          "params": {
            "newRescuer": "The address of the new rescuer."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "allowance(address,address)": {
          "notice": "Gets the remaining amount of fiat tokens a spender is allowed to transfer on behalf of the token owner."
        },
        "approve(address,uint256)": {
          "notice": "Sets a fiat token allowance for a spender to spend on behalf of the caller."
        },
        "balanceOf(address)": {
          "notice": "Gets the fiat token balance of an account."
        },
        "blacklist(address)": {
          "notice": "Adds account to blacklist."
        },
        "burn(uint256)": {
          "notice": "Allows a minter to burn some of its own tokens."
        },
        "configureMinter(address,uint256)": {
          "notice": "Adds or updates a new minter with a mint allowance."
        },
        "initialize(string,string,string,uint8,address,address,address,address)": {
          "notice": "Initializes the fiat token contract."
        },
        "isBlacklisted(address)": {
          "notice": "Checks if account is blacklisted."
        },
        "isMinter(address)": {
          "notice": "Checks if an account is a minter."
        },
        "mint(address,uint256)": {
          "notice": "Mints fiat tokens to an address."
        },
        "minterAllowance(address)": {
          "notice": "Gets the minter allowance for an account."
        },
        "removeMinter(address)": {
          "notice": "Removes a minter."
        },
        "rescueERC20(address,address,uint256)": {
          "notice": "Rescue ERC20 tokens locked up in this contract."
        },
        "rescuer()": {
          "notice": "Returns current rescuer"
        },
        "totalSupply()": {
          "notice": "Gets the totalSupply of the fiat token."
        },
        "transfer(address,uint256)": {
          "notice": "Transfers tokens from the caller."
        },
        "transferFrom(address,address,uint256)": {
          "notice": "Transfers tokens from an address to another by spending the caller's allowance."
        },
        "unBlacklist(address)": {
          "notice": "Removes account from blacklist."
        },
        "updateBlacklister(address)": {
          "notice": "Updates the blacklister address."
        },
        "updateMasterMinter(address)": {
          "notice": "Updates the master minter address."
        },
        "updatePauser(address)": {
          "notice": "Updates the pauser address."
        },
        "updateRescuer(address)": {
          "notice": "Updates the rescuer address."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@ensdomains/=node_modules/@ensdomains/",
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@solidity-parser/=node_modules/prettier-plugin-solidity/node_modules/@solidity-parser/",
      "ds-test/=lib/forge-std/lib/ds-test/src/",
      "eth-gas-reporter/=node_modules/eth-gas-reporter/",
      "forge-std/=lib/forge-std/src/",
      "hardhat/=node_modules/hardhat/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 10000000
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/v1.1/FiatTokenV1_1.sol": "FiatTokenV1_1"
    },
    "evmVersion": "istanbul",
    "libraries": {}
  },
  "sources": {
    "contracts/v1.1/FiatTokenV1_1.sol": {
      "keccak256": "0x074eb0ccfae05bae37aff36fdfb694250a8fd7b0178caef0635507ab1344b918",
      "urls": [
        "bzz-raw://082ed1324bf6219acf0a01d5bea0f9e07f972c7f6df403c13e721c7bb46a3a67",
        "dweb:/ipfs/QmPu2XwF1hFxMexy1FAzHkE3LBt2NQ5YfoZycGZL4sQgTR"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1.1/Rescuable.sol": {
      "keccak256": "0x79bb6ea6f45b58ad75c9c8cfe82825930cddc77d817607ddc61d3e1f78a74cfb",
      "urls": [
        "bzz-raw://f6aa670e4d26932d143fd946077fc21c82c6e22ed66861faa42567b2684ecf01",
        "dweb:/ipfs/QmQmWkmXDoR7Z8fyxfrRg6gUZTvKAi6sPmgyX1Jj9d1mAq"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/AbstractFiatTokenV1.sol": {
      "keccak256": "0x3ff009bf7a01e2bf600d320b8be0921014606c0c9643990ab5b1acc7bb5b14e0",
      "urls": [
        "bzz-raw://7180e208d2ac06b8927eac72644ab00e7d03d2d93a57e41380c299147cdc4ea9",
        "dweb:/ipfs/QmeNAWsejER9AuqeuLD6V42Pp1tGHYcXJ65LoAoP1EUrUs"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/Blacklistable.sol": {
      "keccak256": "0xd44b9f11d8fc1384f8261d4fd9c2fcd06893846d92605541d797c94e70e158d8",
      "urls": [
        "bzz-raw://a184e8a647a516e23eac13d8743eece6f743424cda5034d8e8f8c05c75912181",
        "dweb:/ipfs/Qmec8QpCBFUvXfwMxGG3zZf7nfWjhkDUK2ch6k1N5DoZHu"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/FiatTokenV1.sol": {
      "keccak256": "0xe5e2f197479f0595180384277345ca09c12e26ce57c4c427f4c8013a08b4a4de",
      "urls": [
        "bzz-raw://5680d3b32215c8ddfda2d1bd9770e5b5957fb931139f5434c22cf883a516fe0a",
        "dweb:/ipfs/Qmf8mLTfkfjbs97gWDHPJjMJGc6R44ok6WsCAkeaVQqpfh"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/Ownable.sol": {
      "keccak256": "0xdd51a06c4d6c38ef806c50463ade63123980334bf173c3301794e242228fc9e5",
      "urls": [
        "bzz-raw://46632a7280a569d30da08ae6c0559295fa1dd6917ba458785ac1f50736474741",
        "dweb:/ipfs/QmYb5zXqzTHPaWegnn5NcmrbDHbVFYnpENXvtgjQxCrjMe"
      ],
      "license": "MIT"
    },
    "contracts/v1/Pausable.sol": {
      "keccak256": "0xa1112323b001871746d971f9dd2c61d094ea856146071537dc9d92e18e8cc829",
      "urls": [
        "bzz-raw://9ba61133c7e0f552222d0d3f05d0bba65f29e1db5242a50a3ec16b55aa0e7cc9",
        "dweb:/ipfs/QmZtJV2VVPp5Upi4siVuM1mYjfzHPfXY95XjepAo6MYVxc"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
      "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
      "urls": [
        "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
        "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
      "urls": [
        "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
        "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
      "keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
      "urls": [
        "bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
        "dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
      "urls": [
        "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
        "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}