{
  "compiler": {
    "version": "0.6.12+commit.27d51765"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Blacklisted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newBlacklister",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "BlacklisterChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "UnBlacklisted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "blacklist"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "blacklister",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isBlacklisted",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "unBlacklist"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_newBlacklister",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateBlacklister"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "blacklist(address)": {
          "params": {
            "_account": "The address to blacklist."
          }
        },
        "isBlacklisted(address)": {
          "params": {
            "_account": "The address to check."
          },
          "returns": {
            "_0": "True if the account is blacklisted, false if the account is not blacklisted."
          }
        },
        "owner()": {
          "details": "Tells the address of the owner",
          "returns": {
            "_0": "the address of the owner"
          }
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        },
        "unBlacklist(address)": {
          "params": {
            "_account": "The address to remove from the blacklist."
          }
        },
        "updateBlacklister(address)": {
          "params": {
            "_newBlacklister": "The address of the new blacklister."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "blacklist(address)": {
          "notice": "Adds account to blacklist."
        },
        "isBlacklisted(address)": {
          "notice": "Checks if account is blacklisted."
        },
        "unBlacklist(address)": {
          "notice": "Removes account from blacklist."
        },
        "updateBlacklister(address)": {
          "notice": "Updates the blacklister address."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@ensdomains/=node_modules/@ensdomains/",
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@solidity-parser/=node_modules/prettier-plugin-solidity/node_modules/@solidity-parser/",
      "ds-test/=lib/forge-std/lib/ds-test/src/",
      "eth-gas-reporter/=node_modules/eth-gas-reporter/",
      "forge-std/=lib/forge-std/src/",
      "hardhat/=node_modules/hardhat/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 10000000
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/v1/Blacklistable.sol": "Blacklistable"
    },
    "evmVersion": "istanbul",
    "libraries": {}
  },
  "sources": {
    "contracts/v1/Blacklistable.sol": {
      "keccak256": "0xd44b9f11d8fc1384f8261d4fd9c2fcd06893846d92605541d797c94e70e158d8",
      "urls": [
        "bzz-raw://a184e8a647a516e23eac13d8743eece6f743424cda5034d8e8f8c05c75912181",
        "dweb:/ipfs/Qmec8QpCBFUvXfwMxGG3zZf7nfWjhkDUK2ch6k1N5DoZHu"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/Ownable.sol": {
      "keccak256": "0xdd51a06c4d6c38ef806c50463ade63123980334bf173c3301794e242228fc9e5",
      "urls": [
        "bzz-raw://46632a7280a569d30da08ae6c0559295fa1dd6917ba458785ac1f50736474741",
        "dweb:/ipfs/QmYb5zXqzTHPaWegnn5NcmrbDHbVFYnpENXvtgjQxCrjMe"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}