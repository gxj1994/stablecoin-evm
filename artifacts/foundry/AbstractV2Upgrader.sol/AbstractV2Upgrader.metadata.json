{
  "compiler": {
    "version": "0.6.12+commit.27d51765"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract FiatTokenProxy",
            "name": "proxy",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "implementation",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "newProxyAdmin",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "abortUpgrade"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "helper",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "implementation",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "newProxyAdmin",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "proxy",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "withdrawFiatToken"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "constructor": {
          "params": {
            "implementation": "Address of the implementation contract",
            "newProxyAdmin": "Grantee of proxy admin role after upgrade",
            "proxy": "FiatTokenProxy contract"
          }
        },
        "helper()": {
          "returns": {
            "_0": "Contract address"
          }
        },
        "implementation()": {
          "returns": {
            "_0": "Contract address"
          }
        },
        "newProxyAdmin()": {
          "returns": {
            "_0": "Address"
          }
        },
        "owner()": {
          "details": "Tells the address of the owner",
          "returns": {
            "_0": "the address of the owner"
          }
        },
        "proxy()": {
          "returns": {
            "_0": "Contract address"
          }
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "abortUpgrade()": {
          "notice": "Transfer proxy admin role to newProxyAdmin, and self-destruct"
        },
        "constructor": "Constructor",
        "helper()": {
          "notice": "The address of the V2UpgraderHelper contract"
        },
        "implementation()": {
          "notice": "The address of the FiatTokenV2 implementation contract"
        },
        "newProxyAdmin()": {
          "notice": "The address to which the proxy admin role will be transferred after the upgrade is completed"
        },
        "proxy()": {
          "notice": "The address of the FiatTokenProxy contract"
        },
        "withdrawFiatToken()": {
          "notice": "Withdraw any FiatToken in the contract"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@ensdomains/=node_modules/@ensdomains/",
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@solidity-parser/=node_modules/prettier-plugin-solidity/node_modules/@solidity-parser/",
      "ds-test/=lib/forge-std/lib/ds-test/src/",
      "eth-gas-reporter/=node_modules/eth-gas-reporter/",
      "forge-std/=lib/forge-std/src/",
      "hardhat/=node_modules/hardhat/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 10000000
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/v2/upgrader/AbstractV2Upgrader.sol": "AbstractV2Upgrader"
    },
    "evmVersion": "istanbul",
    "libraries": {}
  },
  "sources": {
    "contracts/upgradeability/AdminUpgradeabilityProxy.sol": {
      "keccak256": "0x55b58fa45bd1ebf255d2eabbd9257445fce2ae7486e8e683623d3375d2d93d1e",
      "urls": [
        "bzz-raw://6ec18ce29bdd44706fce5cdaefb0a6ca4129c1c2f8375cb74d8c6790aaaddec4",
        "dweb:/ipfs/QmXEVnvLp4xAPEgSAkotawcCcggsdDQjAvG4crPuWfA4U9"
      ],
      "license": "Apache-2.0"
    },
    "contracts/upgradeability/Proxy.sol": {
      "keccak256": "0x2cfa23c03d22d153d41e3b4f2c68e46e4b207205b5d12345b43e575b1da8164a",
      "urls": [
        "bzz-raw://3ff3a86ef54b3763b0ff3e7c3d27a3000d7d2e5ede7c269ab8f0123147cda179",
        "dweb:/ipfs/QmVki2G1PsmuaS7npjuwikNUqvfBDgFrmYUkdkEJqaDwxK"
      ],
      "license": "Apache-2.0"
    },
    "contracts/upgradeability/UpgradeabilityProxy.sol": {
      "keccak256": "0x7d1312c9090e5fb98d6ab676edcf0c64099e7a251a18091566816a6a2dece517",
      "urls": [
        "bzz-raw://f86a893a20bdb283cec644ddeeb37b766e604ea136f6157341fad669d7ceedfe",
        "dweb:/ipfs/QmQJKYTr2BmLNyTiYVXMYEJWE3JCsR1p7j3fWDacZ3V5vf"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/FiatTokenProxy.sol": {
      "keccak256": "0x7ee55764f74b2983880409ab3873ad6a7299231cd48cb4b9d40a10259d012424",
      "urls": [
        "bzz-raw://95d2b6c3a7c76d2f88a6f3b3785a20460e58bac9d46c6db2bd62496dca06f65b",
        "dweb:/ipfs/QmdX71TWN96ScnvEYHNVnmJfhgfJdF2pE1pgVcjLcbugrK"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v1/Ownable.sol": {
      "keccak256": "0xdd51a06c4d6c38ef806c50463ade63123980334bf173c3301794e242228fc9e5",
      "urls": [
        "bzz-raw://46632a7280a569d30da08ae6c0559295fa1dd6917ba458785ac1f50736474741",
        "dweb:/ipfs/QmYb5zXqzTHPaWegnn5NcmrbDHbVFYnpENXvtgjQxCrjMe"
      ],
      "license": "MIT"
    },
    "contracts/v2/upgrader/AbstractV2Upgrader.sol": {
      "keccak256": "0x9a840b8a6cfe7cfe39a8a0c258eba49326747078bce062792273e91648c27a89",
      "urls": [
        "bzz-raw://bea7a96eb99955de66b12ed608052d9139d64f5e0e16465a3ec417e5ea94804f",
        "dweb:/ipfs/QmYfgGUmdBGanqr7f7ia7Cx3QujH5mkSet7qSeU1aHv79m"
      ],
      "license": "Apache-2.0"
    },
    "contracts/v2/upgrader/helpers/AbstractUpgraderHelper.sol": {
      "keccak256": "0x8566fb55145dec343f0752d5eca1aaacf38390112cbb7786b9115ca8b6ca7a3f",
      "urls": [
        "bzz-raw://83477f787801e56c7f34d735d27538dc14d6d7b6a6f071d499b7835288246067",
        "dweb:/ipfs/QmWSLc6TV8NUGsJAXhq9mw6nJXWx3uj6hEHvRnDN4FT8qP"
      ],
      "license": "Apache-2.0"
    },
    "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
      "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
      "urls": [
        "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
        "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
      "urls": [
        "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
        "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
      "urls": [
        "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
        "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}